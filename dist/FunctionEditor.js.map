{"version":3,"sources":["../src/FunctionEditor.tsx"],"names":["FunctionDescription","React","lazy","rst2html","props","__html","description","FunctionEditor","createRef","updatePopperPosition","onMoveLeft","onMoveRight","func","def","name","showingDescription","state","overflow","maxHeight","textAlign","fontWeight","color","setState","renderContent","showPopper","hidePopper","popperProps","triggerRef","current","arrowProps","placement","show","cursor","PureComponent"],"mappings":"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","sourcesContent":["import React, { Suspense } from 'react';\nimport { PopoverController, Popover } from '@grafana/ui';\nimport { FunctionDescriptor, FunctionEditorControls, FunctionEditorControlsProps } from './FunctionEditorControls';\n\ninterface FunctionEditorProps extends FunctionEditorControlsProps {\n  func: FunctionDescriptor;\n}\n\ninterface FunctionEditorState {\n  showingDescription: boolean;\n}\nconst FunctionDescription = React.lazy(async () => {\n  // @ts-ignore\n  const { default: rst2html } = await import(/* webpackChunkName: \"rst2html\" */ 'rst2html');\n  return {\n    default: (props: { description: string }) => (\n      <div dangerouslySetInnerHTML={{ __html: rst2html(props.description) }} />\n    ),\n  };\n});\n\nclass FunctionEditor extends React.PureComponent<FunctionEditorProps, FunctionEditorState> {\n  private triggerRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: FunctionEditorProps) {\n    super(props);\n\n    this.state = {\n      showingDescription: false,\n    };\n  }\n\n  renderContent = ({ updatePopperPosition }: any) => {\n    const {\n      onMoveLeft,\n      onMoveRight,\n      func: {\n        def: { name, description },\n      },\n    } = this.props;\n    const { showingDescription } = this.state;\n\n    if (showingDescription) {\n      return (\n        <div style={{ overflow: 'auto', maxHeight: '30rem', textAlign: 'left', fontWeight: 'normal' }}>\n          <h4 style={{ color: 'white' }}> {name} </h4>\n          <Suspense fallback={<span>Loading description...</span>}>\n            <FunctionDescription description={description} />\n          </Suspense>\n        </div>\n      );\n    }\n\n    return (\n      <FunctionEditorControls\n        {...this.props}\n        onMoveLeft={() => {\n          onMoveLeft(this.props.func);\n          updatePopperPosition();\n        }}\n        onMoveRight={() => {\n          onMoveRight(this.props.func);\n          updatePopperPosition();\n        }}\n        onDescriptionShow={() => {\n          this.setState({ showingDescription: true }, () => {\n            updatePopperPosition();\n          });\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <PopoverController content={this.renderContent} placement=\"top\" hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {this.triggerRef && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={this.triggerRef.current}\n                  wrapperClassName=\"popper\"\n                  className=\"popper__background\"\n                  onMouseLeave={() => {\n                    this.setState({ showingDescription: false });\n                    hidePopper();\n                  }}\n                  onMouseEnter={showPopper}\n                  renderArrow={({ arrowProps, placement }) => (\n                    <div className=\"popper__arrow\" data-placement={placement} {...arrowProps} />\n                  )}\n                />\n              )}\n\n              <span\n                ref={this.triggerRef}\n                onClick={popperProps.show ? hidePopper : showPopper}\n                onMouseLeave={() => {\n                  hidePopper();\n                  this.setState({ showingDescription: false });\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                {this.props.func.def.name}\n              </span>\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  }\n}\n\nexport { FunctionEditor };\n"],"file":"FunctionEditor.js"}