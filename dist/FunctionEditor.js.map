{"version":3,"sources":["../src/FunctionEditor.tsx"],"names":["FunctionDescription","React","lazy","rst2html","props","__html","description","FunctionEditor","createRef","updatePopperPosition","onMoveLeft","onMoveRight","func","def","name","showingDescription","state","overflow","maxHeight","textAlign","fontWeight","color","setState","renderContent","showPopper","hidePopper","popperProps","triggerRef","current","arrowProps","placement","show","cursor","PureComponent"],"mappings":"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","sourcesContent":["import React, { Suspense } from 'react';\nimport { PopoverController, Popover } from '@grafana/ui';\nimport { FunctionDescriptor, FunctionEditorControls, FunctionEditorControlsProps } from './FunctionEditorControls';\n\ninterface FunctionEditorProps extends FunctionEditorControlsProps {\n  func: FunctionDescriptor;\n}\n\ninterface FunctionEditorState {\n  showingDescription: boolean;\n}\nconst FunctionDescription = React.lazy(async () => {\n  // @ts-ignore\n  const { default: rst2html } = await import(/* webpackChunkName: \"rst2html\" */ 'rst2html');\n  return {\n    default: (props: { description: string }) => (\n      <div dangerouslySetInnerHTML={{ __html: rst2html(props.description) }} />\n    ),\n  };\n});\n\nclass FunctionEditor extends React.PureComponent<FunctionEditorProps, FunctionEditorState> {\n  private triggerRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: FunctionEditorProps) {\n    super(props);\n\n    this.state = {\n      showingDescription: false,\n    };\n  }\n\n  renderContent = ({ updatePopperPosition }: any) => {\n    const {\n      onMoveLeft,\n      onMoveRight,\n      func: {\n        def: { name, description },\n      },\n    } = this.props;\n    const { showingDescription } = this.state;\n\n    if (showingDescription) {\n      return (\n        <div style={{ overflow: 'auto', maxHeight: '30rem', textAlign: 'left', fontWeight: 'normal' }}>\n          <h4 style={{ color: 'white' }}> {name} </h4>\n          <Suspense fallback={<span>Loading description...</span>}>\n            <FunctionDescription description={description} />\n          </Suspense>\n        </div>\n      );\n    }\n\n    return (\n      <FunctionEditorControls\n        {...this.props}\n        onMoveLeft={() => {\n          onMoveLeft(this.props.func);\n          updatePopperPosition();\n        }}\n        onMoveRight={() => {\n          onMoveRight(this.props.func);\n          updatePopperPosition();\n        }}\n        onDescriptionShow={() => {\n          this.setState({ showingDescription: true }, () => {\n            updatePopperPosition();\n          });\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <PopoverController content={this.renderContent} placement=\"top\" hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {this.triggerRef && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={this.triggerRef.current}\n                  wrapperClassName=\"popper\"\n                  className=\"popper__background\"\n                  onMouseLeave={() => {\n                    this.setState({ showingDescription: false });\n                    hidePopper();\n                  }}\n                  onMouseEnter={showPopper}\n                  renderArrow={({ arrowProps, placement }) => (\n                    <div className=\"popper__arrow\" data-placement={placement} {...arrowProps} />\n                  )}\n                />\n              )}\n\n              <span\n                ref={this.triggerRef}\n                onClick={popperProps.show ? hidePopper : showPopper}\n                onMouseLeave={() => {\n                  hidePopper();\n                  this.setState({ showingDescription: false });\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                {this.props.func.def.name}\n              </span>\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  }\n}\n\nexport { FunctionEditor };\n"],"file":"FunctionEditor.js"}