{"version":3,"sources":["../src/FunctionEditorControls.tsx"],"names":["FunctionHelpButton","props","description","onDescriptionShow","window","open","FunctionEditorControls","func","onMoveLeft","onMoveRight","onRemove","display","width","justifyContent","def","name"],"mappings":";;;;;;;AAAA;;;;AAqBA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAiF;AAC1G,MAAIA,KAAK,CAACC,WAAV,EAAuB;AACrB,WAAO,CAAC,IAAD,CAAM,UAAU,+BAAhB,CAAgD,QAAQ,CAACD,KAAK,CAACE,iBAAP,CAAxD,GAAP;AACD;;AAED,SACE,CAAC,IAAD,CACE,UAAU,+BADZ,CAEE,QAAQ,CAAC,YAAM;AACbC,IAAAA,MAAM,CAACC,IAAP,CACE,0DADF,EAEE,QAFF;AAID,GALO,CAFV,GADF;AAWD,CAhBD;;AAkBO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpCL,KADoC,EAKjC;AAAA,MACKM,IADL,GACoEN,KADpE,CACKM,IADL;AAAA,MACWC,UADX,GACoEP,KADpE,CACWO,UADX;AAAA,MACuBC,WADvB,GACoER,KADpE,CACuBQ,WADvB;AAAA,MACoCC,QADpC,GACoET,KADpE,CACoCS,QADpC;AAAA,MAC8CP,iBAD9C,GACoEF,KADpE,CAC8CE,iBAD9C;AAEH,SACE,CAAC,GAAD,CACE,MAAM,CAAC;AACLQ,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,cAAc,EAAE;AAHX,GAAD,CADR;MAOE,CAAC,IAAD,CAAM,UAAU,0BAAhB,CAA2C,QAAQ,CAAC;AAAA,aAAML,UAAU,CAACD,IAAD,CAAhB;AAAA,KAAD,CAAnD;MACA,CAAC,kBAAD,CACE,KAAK,CAACA,IAAI,CAACO,GAAL,CAASC,IAAV,CADP,CAEE,YAAY,CAACR,IAAI,CAACO,GAAL,CAASZ,WAAV,CAFd,CAGE,kBAAkB,CAACC,iBAAD,CAHpB;MAKA,CAAC,IAAD,CAAM,UAAU,sBAAhB,CAAuC,QAAQ,CAAC;AAAA,aAAMO,QAAQ,CAACH,IAAD,CAAd;AAAA,KAAD,CAA/C;MACA,CAAC,IAAD,CAAM,UAAU,2BAAhB,CAA4C,QAAQ,CAAC;AAAA,aAAME,WAAW,CAACF,IAAD,CAAjB;AAAA,KAAD,CAApD;IACF,EAAE,GAAF,CAhBF;AAkBD,CAzBM","sourcesContent":["import React from 'react';\n\nexport interface FunctionDescriptor {\n  text: string;\n  params: string[];\n  def: {\n    category: string;\n    defaultParams: string[];\n    description?: string;\n    fake: boolean;\n    name: string;\n    params: string[];\n  };\n}\n\nexport interface FunctionEditorControlsProps {\n  onMoveLeft: (func: FunctionDescriptor) => void;\n  onMoveRight: (func: FunctionDescriptor) => void;\n  onRemove: (func: FunctionDescriptor) => void;\n}\n\nconst FunctionHelpButton = (props: { description: string; name: string; onDescriptionShow: () => void }) => {\n  if (props.description) {\n    return <span className=\"pointer fa fa-question-circle\" onClick={props.onDescriptionShow} />;\n  }\n\n  return (\n    <span\n      className=\"pointer fa fa-question-circle\"\n      onClick={() => {\n        window.open(\n          'https://github.com/sasaki77/archiverappliance-datasource',\n          '_blank'\n        );\n      }}\n    />\n  );\n};\n\nexport const FunctionEditorControls = (\n  props: FunctionEditorControlsProps & {\n    func: FunctionDescriptor;\n    onDescriptionShow: () => void;\n  }\n) => {\n  const { func, onMoveLeft, onMoveRight, onRemove, onDescriptionShow } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '60px',\n        justifyContent: 'space-between',\n      }}\n    >\n      <span className=\"pointer fa fa-arrow-left\" onClick={() => onMoveLeft(func)} />\n      <FunctionHelpButton\n        name={func.def.name}\n        description={func.def.description}\n        onDescriptionShow={onDescriptionShow}\n      />\n      <span className=\"pointer fa fa-remove\" onClick={() => onRemove(func)} />\n      <span className=\"pointer fa fa-arrow-right\" onClick={() => onMoveRight(func)} />\n    </div>\n  );\n};\n"],"file":"FunctionEditorControls.js"}