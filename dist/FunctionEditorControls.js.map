{"version":3,"sources":["../src/FunctionEditorControls.tsx"],"names":["FunctionHelpButton","props","description","onDescriptionShow","window","open","FunctionEditorControls","func","onMoveLeft","onMoveRight","onRemove","display","width","justifyContent","def","name"],"mappings":";;;;;;;AAAA;;;;AAqBA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAiF;AAC1G,MAAIA,KAAK,CAACC,WAAV,EAAuB;AACrB,WAAO;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAgD,MAAA,OAAO,EAAED,KAAK,CAACE;AAA/D,MAAP;AACD;;AAED,SACE;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,MAAM,CAACC,IAAP,CACE,0DADF,EAEE,QAFF;AAID;AAPH,IADF;AAWD,CAhBD;;AAkBO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpCL,KADoC,EAKjC;AAAA,MACKM,IADL,GACoEN,KADpE,CACKM,IADL;AAAA,MACWC,UADX,GACoEP,KADpE,CACWO,UADX;AAAA,MACuBC,WADvB,GACoER,KADpE,CACuBQ,WADvB;AAAA,MACoCC,QADpC,GACoET,KADpE,CACoCS,QADpC;AAAA,MAC8CP,iBAD9C,GACoEF,KADpE,CAC8CE,iBAD9C;AAEH,SACE;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,cAAc,EAAE;AAHX;AADT,KAOE;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAA2C,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACD,IAAD,CAAhB;AAAA;AAApD,IAPF,EAQE,gCAAC,kBAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACO,GAAL,CAASC,IADjB;AAEE,IAAA,WAAW,EAAER,IAAI,CAACO,GAAL,CAASZ,WAFxB;AAGE,IAAA,iBAAiB,EAAEC;AAHrB,IARF,EAaE;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,OAAO,EAAE;AAAA,aAAMO,QAAQ,CAACH,IAAD,CAAd;AAAA;AAAhD,IAbF,EAcE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,OAAO,EAAE;AAAA,aAAME,WAAW,CAACF,IAAD,CAAjB;AAAA;AAArD,IAdF,CADF;AAkBD,CAzBM","sourcesContent":["import React from 'react';\n\nexport interface FunctionDescriptor {\n  text: string;\n  params: string[];\n  def: {\n    category: string;\n    defaultParams: string[];\n    description?: string;\n    fake: boolean;\n    name: string;\n    params: string[];\n  };\n}\n\nexport interface FunctionEditorControlsProps {\n  onMoveLeft: (func: FunctionDescriptor) => void;\n  onMoveRight: (func: FunctionDescriptor) => void;\n  onRemove: (func: FunctionDescriptor) => void;\n}\n\nconst FunctionHelpButton = (props: { description: string; name: string; onDescriptionShow: () => void }) => {\n  if (props.description) {\n    return <span className=\"pointer fa fa-question-circle\" onClick={props.onDescriptionShow} />;\n  }\n\n  return (\n    <span\n      className=\"pointer fa fa-question-circle\"\n      onClick={() => {\n        window.open(\n          'https://github.com/sasaki77/archiverappliance-datasource',\n          '_blank'\n        );\n      }}\n    />\n  );\n};\n\nexport const FunctionEditorControls = (\n  props: FunctionEditorControlsProps & {\n    func: FunctionDescriptor;\n    onDescriptionShow: () => void;\n  }\n) => {\n  const { func, onMoveLeft, onMoveRight, onRemove, onDescriptionShow } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '60px',\n        justifyContent: 'space-between',\n      }}\n    >\n      <span className=\"pointer fa fa-arrow-left\" onClick={() => onMoveLeft(func)} />\n      <FunctionHelpButton\n        name={func.def.name}\n        description={func.def.description}\n        onDescriptionShow={onDescriptionShow}\n      />\n      <span className=\"pointer fa fa-remove\" onClick={() => onRemove(func)} />\n      <span className=\"pointer fa fa-arrow-right\" onClick={() => onMoveRight(func)} />\n    </div>\n  );\n};\n"],"file":"FunctionEditorControls.js"}