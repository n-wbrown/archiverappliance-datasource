{"version":3,"sources":["../src/aafunc.js"],"names":["funcIndex","categories","Transform","Options","addFuncDef","newFuncDef","funcDef","params","defaultParams","category","push","name","shortName","type","options","FuncInstance","def","slice","updateText","metricFunctions","func","Error","message","bindedFunc","param","i","length","Number","_","partial","metricExp","str","parameters","map","value","index","paramType","$","isNumeric","unshift","join","strValue","indexOf","optional","_hasMultipleParamsInString","each","split","partVal","idx","updateParam","trim","splice","text","createFuncInstance","isString","getFuncDef","getCategories"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\n\nconst funcIndex = [];\nconst categories = {\n  Transform: [],\n  'Filter Series': [],\n  Options: [],\n};\n\nfunction addFuncDef(newFuncDef) {\n  const funcDef = { ...newFuncDef };\n\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    categories[funcDef.category].push(funcDef);\n  }\n  funcIndex[funcDef.name] = funcDef;\n  funcIndex[funcDef.shortName || funcDef.name] = funcDef;\n}\n\n// Transform\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [\n    { name: 'factor', type: 'float', options: [100, 0.01, 10, -1] },\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [\n    { name: 'delta', type: 'float', options: [-100, 100] },\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'delta',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'fluctuation',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\n// Filter Series\n\naddFuncDef({\n  name: 'top',\n  category: 'Filter Series',\n  params: [\n    { name: 'number', type: 'int' },\n    {\n      name: 'value',\n      type: 'string',\n      options: ['avg', 'min', 'max', 'absoluteMin', 'absoluteMax', 'sum'],\n    },\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'bottom',\n  category: 'Filter Series',\n  params: [\n    { name: 'number', type: 'int' },\n    {\n      name: 'value',\n      type: 'string',\n      options: ['avg', 'min', 'max', 'absoluteMin', 'absoluteMax', 'sum'],\n    },\n  ],\n  defaultParams: [5, 'avg'],\n});\n\n// Options\n\naddFuncDef({\n  name: 'maxNumPVs',\n  category: 'Options',\n  params: [\n    { name: 'number', type: 'int' },\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'binInterval',\n  category: 'Options',\n  params: [\n    { name: 'interval', type: 'int' },\n  ],\n  defaultParams: [900],\n});\n\nclass FuncInstance {\n  constructor(funcDef, params) {\n    this.def = funcDef;\n\n    if (params) {\n      this.params = params;\n    } else {\n      // Create with default params\n      this.params = [];\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  bindFunction(metricFunctions) {\n    const func = metricFunctions[this.def.name];\n\n    if (!func) {\n      throw new Error({ message: `Method not found ${this.def.name}` });\n    }\n\n    // Bind function arguments\n    let bindedFunc = func;\n    let param;\n    for (let i = 0; i < this.params.length; i += 1) {\n      param = this.params[i];\n\n      // Convert numeric params\n      if (\n        this.def.params[i].type === 'int'\n        || this.def.params[i].type === 'float'\n      ) {\n        param = Number(param);\n      }\n      bindedFunc = _.partial(bindedFunc, param);\n    }\n    return bindedFunc;\n  }\n\n  render(metricExp) {\n    const str = `${this.def.name}(`;\n    const parameters = _.map(this.params, (value, index) => {\n      const paramType = this.def.params[index].type;\n      if (\n        paramType === 'int'\n        || paramType === 'float'\n        || paramType === 'value_or_series'\n        || paramType === 'boolean'\n      ) {\n        return value;\n      }\n\n      if (paramType === 'int_or_interval' && $.isNumeric(value)) {\n        return value;\n      }\n\n      return `'${value}'`;\n    }, this);\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return `${str}${parameters.join(', ')})`;\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      }, this);\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = `${this.def.name}()`;\n      return;\n    }\n\n    const text = `${this.def.name}(${this.params.join(', ')})`;\n    this.text = text;\n  }\n}\n\nexport function createFuncInstance(funcDef, params) {\n  if (_.isString(funcDef)) {\n    if (!funcIndex[funcDef]) {\n      throw new Error({ message: `Method not found ${funcDef.name}` });\n    }\n    return new FuncInstance(funcIndex[funcDef], params);\n  }\n\n  return new FuncInstance(funcDef, params);\n}\n\nexport function getFuncDef(name) {\n  return funcIndex[name];\n}\n\nexport function getCategories() {\n  return categories;\n}\n"],"file":"aafunc.js"}