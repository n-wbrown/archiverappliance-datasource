{"version":3,"sources":["../src/aafunc.js"],"names":["index","categories","Transform","addFuncDef","funcDef","params","defaultParams","category","push","name","shortName","type","options","FuncInstance","def","slice","updateText","metricFunctions","func","bindedFunc","param","i","length","Number","_","partial","message","metricExp","str","parameters","map","value","paramType","$","isNumeric","unshift","join","strValue","indexOf","optional","_hasMultipleParamsInString","each","split","partVal","idx","updateParam","trim","splice","text","createFuncInstance","isString","getFuncDef","getCategories"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\n\nvar index = [];\nvar categories = {\n  Transform: [],\n};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    categories[funcDef.category].push(funcDef);\n  }\n  index[funcDef.name] = funcDef;\n  index[funcDef.shortName || funcDef.name] = funcDef;\n}\n\n// Transform\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [\n    { name: 'factor', type: 'float', options: [100, 0.01, 10, -1]}\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [\n    { name: 'delta', type: 'float', options: [-100, 100]}\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'delta',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\nclass FuncInstance {\n  constructor(funcDef, params) {\n    this.def = funcDef;\n\n    if (params) {\n      this.params = params;\n    } else {\n      // Create with default params\n      this.params = [];\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  bindFunction(metricFunctions) {\n    var func = metricFunctions[this.def.name];\n    if (func) {\n\n      // Bind function arguments\n      var bindedFunc = func;\n      var param;\n      for (var i = 0; i < this.params.length; i++) {\n        param = this.params[i];\n\n        // Convert numeric params\n        if (this.def.params[i].type === 'int' ||\n            this.def.params[i].type === 'float') {\n          param = Number(param);\n        }\n        bindedFunc = _.partial(bindedFunc, param);\n      }\n      return bindedFunc;\n    } else {\n      throw { message: 'Method not found ' + this.def.name };\n    }\n  }\n\n  render(metricExp) {\n    var str = this.def.name + '(';\n    var parameters = _.map(this.params, function(value, index) {\n\n      var paramType = this.def.params[index].type;\n      if (paramType === 'int' ||\n          paramType === 'float' ||\n          paramType === 'value_or_series' ||\n          paramType === 'boolean') {\n        return value;\n      }\n      else if (paramType === 'int_or_interval' && $.isNumeric(value)) {\n        return value;\n      }\n\n      return \"'\" + value + \"'\";\n\n    }, this);\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), function(partVal, idx) {\n        this.updateParam(partVal.trim(), idx);\n      }, this);\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    }\n    else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    var text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function createFuncInstance(funcDef, params) {\n  if (_.isString(funcDef)) {\n    if (!index[funcDef]) {\n      throw { message: 'Method not found ' + name };\n    }\n    funcDef = index[funcDef];\n  }\n  return new FuncInstance(funcDef, params);\n}\n\nexport function getFuncDef(name) {\n  return index[name];\n}\n\nexport function getCategories() {\n  return categories;\n}\n\n"],"file":"aafunc.js"}