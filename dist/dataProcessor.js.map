{"version":3,"sources":["../src/dataProcessor.js"],"names":["scale","factor","datapoints","_","map","point","offset","delta","newSeries","deltaValue","i","length","push","fluctuation","flucValue","datapointsAvg","meanBy","datapointsMin","minPoint","minBy","datapointsMax","maxPoint","maxBy","datapointsSum","sumBy","datapointsAbsMin","Math","abs","datapointsAbsMax","datapointsAggFuncs","avg","min","max","sum","absoluteMin","absoluteMax","extraction","order","n","orderFunc","timeseriesData","orderByCallback","sortByIteratee","ts","sortedTsData","sortBy","slice","reverse","functions","top","partial","bottom","aaFunctions"],"mappings":";;;;;;;AAAA;;;;AAEA;AAEA,SAASA,KAAT,CAAeC,MAAf,EAAuBC,UAAvB,EAAmC;AACjC,SAAOC,mBAAEC,GAAF,CAAMF,UAAN,EAAkB,UAACG,KAAD;AAAA,WACvB,CAACA,KAAK,CAAC,CAAD,CAAL,GAAWJ,MAAZ,EAAoBI,KAAK,CAAC,CAAD,CAAzB,CADuB;AAAA,GAAlB,CAAP;AAGD;;AAED,SAASC,MAAT,CAAgBC,KAAhB,EAAuBL,UAAvB,EAAmC;AACjC,SAAOC,mBAAEC,GAAF,CAAMF,UAAN,EAAkB,UAACG,KAAD;AAAA,WACvB,CAACA,KAAK,CAAC,CAAD,CAAL,GAAWE,KAAZ,EAAmBF,KAAK,CAAC,CAAD,CAAxB,CADuB;AAAA,GAAlB,CAAP;AAGD;;AAED,SAASE,KAAT,CAAeL,UAAf,EAA2B;AACzB,MAAMM,SAAS,GAAG,EAAlB;AACA,MAAIC,UAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACS,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC7CD,IAAAA,UAAU,GAAGP,UAAU,CAACQ,CAAD,CAAV,CAAc,CAAd,IAAmBR,UAAU,CAACQ,CAAC,GAAG,CAAL,CAAV,CAAkB,CAAlB,CAAhC;AACAF,IAAAA,SAAS,CAACI,IAAV,CAAe,CAACH,UAAD,EAAaP,UAAU,CAACQ,CAAD,CAAV,CAAc,CAAd,CAAb,CAAf;AACD;;AACD,SAAOF,SAAP;AACD;;AAED,SAASK,WAAT,CAAqBX,UAArB,EAAiC;AAC/B,MAAMM,SAAS,GAAG,EAAlB;AACA,MAAIM,SAAJ;;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACS,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC7CI,IAAAA,SAAS,GAAGZ,UAAU,CAACQ,CAAD,CAAV,CAAc,CAAd,IAAmBR,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAA/B;AACAM,IAAAA,SAAS,CAACI,IAAV,CAAe,CAACE,SAAD,EAAYZ,UAAU,CAACQ,CAAD,CAAV,CAAc,CAAd,CAAZ,CAAf;AACD;;AACD,SAAOF,SAAP;AACD,C,CAED;AAEA;;;AAEA,SAASO,aAAT,CAAuBb,UAAvB,EAAmC;AACjC,SAAOC,mBAAEa,MAAF,CAASd,UAAT,EAAqB,UAACG,KAAD;AAAA,WAAWA,KAAK,CAAC,CAAD,CAAhB;AAAA,GAArB,CAAP;AACD;;AAED,SAASY,aAAT,CAAuBf,UAAvB,EAAmC;AACjC,MAAMgB,QAAQ,GAAGf,mBAAEgB,KAAF,CAAQjB,UAAR,EAAoB,UAACG,KAAD;AAAA,WAAWA,KAAK,CAAC,CAAD,CAAhB;AAAA,GAApB,CAAjB;;AACA,SAAOa,QAAQ,CAAC,CAAD,CAAf;AACD;;AAED,SAASE,aAAT,CAAuBlB,UAAvB,EAAmC;AACjC,MAAMmB,QAAQ,GAAGlB,mBAAEmB,KAAF,CAAQpB,UAAR,EAAoB,UAACG,KAAD;AAAA,WAAWA,KAAK,CAAC,CAAD,CAAhB;AAAA,GAApB,CAAjB;;AACA,SAAOgB,QAAQ,CAAC,CAAD,CAAf;AACD;;AAED,SAASE,aAAT,CAAuBrB,UAAvB,EAAmC;AACjC,SAAOC,mBAAEqB,KAAF,CAAQtB,UAAR,EAAoB,UAACG,KAAD;AAAA,WAAWA,KAAK,CAAC,CAAD,CAAhB;AAAA,GAApB,CAAP;AACD;;AAED,SAASoB,gBAAT,CAA0BvB,UAA1B,EAAsC;AACpC,MAAMgB,QAAQ,GAAGf,mBAAEgB,KAAF,CAAQjB,UAAR,EAAoB,UAACG,KAAD;AAAA,WAAWqB,IAAI,CAACC,GAAL,CAAStB,KAAK,CAAC,CAAD,CAAd,CAAX;AAAA,GAApB,CAAjB;;AACA,SAAOqB,IAAI,CAACC,GAAL,CAAST,QAAQ,CAAC,CAAD,CAAjB,CAAP;AACD;;AAED,SAASU,gBAAT,CAA0B1B,UAA1B,EAAsC;AACpC,MAAMmB,QAAQ,GAAGlB,mBAAEmB,KAAF,CAAQpB,UAAR,EAAoB,UAACG,KAAD;AAAA,WAAWqB,IAAI,CAACC,GAAL,CAAStB,KAAK,CAAC,CAAD,CAAd,CAAX;AAAA,GAApB,CAAjB;;AACA,SAAOqB,IAAI,CAACC,GAAL,CAASN,QAAQ,CAAC,CAAD,CAAjB,CAAP;AACD;;AAED,IAAMQ,kBAAkB,GAAG;AACzBC,EAAAA,GAAG,EAAEf,aADoB;AAEzBgB,EAAAA,GAAG,EAAEd,aAFoB;AAGzBe,EAAAA,GAAG,EAAEZ,aAHoB;AAIzBa,EAAAA,GAAG,EAAEV,aAJoB;AAKzBW,EAAAA,WAAW,EAAET,gBALY;AAMzBU,EAAAA,WAAW,EAAEP;AANY,CAA3B,C,CASA;;AAEA,SAASQ,UAAT,CAAoBC,KAApB,EAA2BC,CAA3B,EAA8BC,SAA9B,EAAyCC,cAAzC,EAAyD;AACvD,MAAMC,eAAe,GAAGZ,kBAAkB,CAACU,SAAD,CAA1C;;AACA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD;AAAA,WACrBF,eAAe,CAACE,EAAE,CAACzC,UAAJ,CADM;AAAA,GAAvB;;AAIA,MAAM0C,YAAY,GAAGzC,mBAAE0C,MAAF,CAASL,cAAT,EAAyBE,cAAzB,CAArB;;AACA,MAAIL,KAAK,KAAK,QAAd,EAAwB;AACtB,WAAOlC,mBAAE2C,KAAF,CAAQF,YAAR,EAAsB,CAAtB,EAAyBN,CAAzB,CAAP;AACD;;AAED,SAAOnC,mBAAE4C,OAAF,CAAU5C,mBAAE2C,KAAF,CAAQF,YAAR,EAAsB,CAACN,CAAvB,CAAV,CAAP;AACD,C,CAED;;;AAEA,IAAMU,SAAS,GAAG;AAChB;AACAhD,EAAAA,KAAK,EAALA,KAFgB;AAGhBM,EAAAA,MAAM,EAANA,MAHgB;AAIhBC,EAAAA,KAAK,EAALA,KAJgB;AAKhBM,EAAAA,WAAW,EAAXA,WALgB;AAMhB;AACAoC,EAAAA,GAAG,EAAE9C,mBAAE+C,OAAF,CAAUd,UAAV,EAAsB,KAAtB,CAPW;AAQhBe,EAAAA,MAAM,EAAEhD,mBAAE+C,OAAF,CAAUd,UAAV,EAAsB,QAAtB;AARQ,CAAlB;eAWe;AACb,MAAIgB,WAAJ,GAAkB;AAChB,WAAOJ,SAAP;AACD;;AAHY,C","sourcesContent":["import _ from 'lodash';\n\n// Transform\n\nfunction scale(factor, datapoints) {\n  return _.map(datapoints, (point) => (\n    [point[0] * factor, point[1]]\n  ));\n}\n\nfunction offset(delta, datapoints) {\n  return _.map(datapoints, (point) => (\n    [point[0] + delta, point[1]]\n  ));\n}\n\nfunction delta(datapoints) {\n  const newSeries = [];\n  let deltaValue;\n  for (let i = 1; i < datapoints.length; i += 1) {\n    deltaValue = datapoints[i][0] - datapoints[i - 1][0];\n    newSeries.push([deltaValue, datapoints[i][1]]);\n  }\n  return newSeries;\n}\n\nfunction fluctuation(datapoints) {\n  const newSeries = [];\n  let flucValue;\n  for (let i = 0; i < datapoints.length; i += 1) {\n    flucValue = datapoints[i][0] - datapoints[0][0];\n    newSeries.push([flucValue, datapoints[i][1]]);\n  }\n  return newSeries;\n}\n\n// Filter Series\n\n// [Support Funcs] Datapoints aggregation functions\n\nfunction datapointsAvg(datapoints) {\n  return _.meanBy(datapoints, (point) => point[0]);\n}\n\nfunction datapointsMin(datapoints) {\n  const minPoint = _.minBy(datapoints, (point) => point[0]);\n  return minPoint[0];\n}\n\nfunction datapointsMax(datapoints) {\n  const maxPoint = _.maxBy(datapoints, (point) => point[0]);\n  return maxPoint[0];\n}\n\nfunction datapointsSum(datapoints) {\n  return _.sumBy(datapoints, (point) => point[0]);\n}\n\nfunction datapointsAbsMin(datapoints) {\n  const minPoint = _.minBy(datapoints, (point) => Math.abs(point[0]));\n  return Math.abs(minPoint[0]);\n}\n\nfunction datapointsAbsMax(datapoints) {\n  const maxPoint = _.maxBy(datapoints, (point) => Math.abs(point[0]));\n  return Math.abs(maxPoint[0]);\n}\n\nconst datapointsAggFuncs = {\n  avg: datapointsAvg,\n  min: datapointsMin,\n  max: datapointsMax,\n  sum: datapointsSum,\n  absoluteMin: datapointsAbsMin,\n  absoluteMax: datapointsAbsMax,\n};\n\n// [Support Funcs] Wrapper function for top and bottom function\n\nfunction extraction(order, n, orderFunc, timeseriesData) {\n  const orderByCallback = datapointsAggFuncs[orderFunc];\n  const sortByIteratee = (ts) => (\n    orderByCallback(ts.datapoints)\n  );\n\n  const sortedTsData = _.sortBy(timeseriesData, sortByIteratee);\n  if (order === 'bottom') {\n    return _.slice(sortedTsData, 0, n);\n  }\n\n  return _.reverse(_.slice(sortedTsData, -n));\n}\n\n// Function list\n\nconst functions = {\n  // Transform\n  scale,\n  offset,\n  delta,\n  fluctuation,\n  // Filter Series\n  top: _.partial(extraction, 'top'),\n  bottom: _.partial(extraction, 'bottom'),\n};\n\nexport default {\n  get aaFunctions() {\n    return functions;\n  },\n};\n"],"file":"dataProcessor.js"}