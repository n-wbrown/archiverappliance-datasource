{"version":3,"sources":["../src/datasource.js"],"names":["_","ArchiverapplianceDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","jsonData","url_mgmt","operatorList","options","query","buildQueryParameters","targets","filter","t","hide","when","data","map","targetProcess","target","all","then","postProcess","buildUrl","doRequest","method","responseParse","res","setAlias","d","reduce","result","concat","deferred","defer","interval","intervalMs","String","pv","undefined","includes","operator","reject","Error","from","Date","range","to","toISOString","resolve","promise","response","target_data","timesiries","target_res","datapoint","val","secs","Math","floor","nanos","meta","forEach","alias","status","message","title","str","replace","s","toString","split","interpolated","mapToTextValue","i","text","value","isObject","datasourceRequest","scopedVars","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class ArchiverapplianceDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = {'Content-Type': 'application/json'};\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    const jsonData = instanceSettings.jsonData || {};\n\n    this.url_mgmt = instanceSettings.jsonData.url_mgmt;\n    this.operatorList = [ \"firstSample\", \"lastSample\", \"firstFill\", \"lastFill\", \"mean\", \"min\", \"max\",\n        \"count\", \"ncount\", \"nth\", \"median\", \"std\", \"jitter\", \"ignoreflyers\", \"flyers\", \"variance\",\n        \"popvariance\", \"kurtosis\", \"skewness\", \"raw\"];\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    const targets = query.targets.map( target => {\n      return this.targetProcess(target, options);\n    });\n\n   return this.q.all(targets).then( data => this.postProcess(data) );\n  }\n\n  targetProcess(target, options) {\n      return this.buildUrl(target, options)\n          .then( url => this.doRequest({\n                  url: url,\n                  method: 'GET'\n              }))\n          .then( res => this.responseParse(res) )\n          .then( data => this.setAlias(data, target) );\n  }\n\n  postProcess(data) {\n    const d = data.reduce( (result, d) => {\n      result = result.concat(d);\n      return result;\n    }, []);\n\n    return {data: d};\n  }\n\n  buildUrl(target, options) {\n    let deferred = this.q.defer();\n\n    let interval = \"\";\n    if ( options.intervalMs > 1000 ) {\n      interval = String(options.intervalMs / 1000 - 1);\n    }\n\n    let pv = \"\"\n    if ( [\"raw\", \"\", undefined].includes(target.operator) || interval === \"\") {\n      pv = \"pv=\" + target.target;\n    } else if ( this.operatorList.includes(target.operator) ) {\n      pv = \"pv=\" + target.operator + \"_\" + interval + \"(\" + target.target + \")\";\n    } else {\n      deferred.reject(Error(\"Data Processing Operator is invalid.\"));\n    }\n\n    const from = new Date(options.range.from);\n    const to = new Date(options.range.to);\n    const url = this.url + '/data/getData.json?' + pv + '&from=' + from.toISOString() + '&to=' + to.toISOString();\n\n    deferred.resolve(url);\n    return deferred.promise;\n  }\n\n  responseParse(response) {\n    let deferred = this.q.defer();\n\n    const target_data = response.data.map( target_res => {\n      const timesiries = target_res.data.map( datapoint => {\n          return [datapoint.val, datapoint.secs*1000+Math.floor(datapoint.nanos/1000000)];\n      });\n      const target_data = {\"target\": target_res.meta[\"name\"], \"datapoints\": timesiries};\n      return target_data;\n    });\n\n    deferred.resolve(target_data);\n    return deferred.promise;\n  }\n\n  setAlias(data, target) {\n    let deferred = this.q.defer();\n\n    data.forEach( d => {\n      if( target.alias !== undefined && target.alias !== \"\" ) {\n        d.target = target.alias;\n      }\n    });\n\n    deferred.resolve(data);\n    return deferred.promise;\n  }\n\n  testDatasource() {\n    return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n    //return this.doRequest({\n    //  url: this.url_mgmt + '/bpl/getAppliancesInCluster',\n    //  method: 'GET',\n    //}).then(response => {\n    //  if (response.status === 200) {\n    //    return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n    //  }\n    //});\n  }\n\n  metricFindQuery(query) {\n    var str = this.templateSrv.replace(query, null, 'regex');\n\n    if (str) {\n      var s = str.toString().split('=');\n      var target = (s[1] || '');\n      var name = (s[0] || '');\n    }\n    else{\n      var target = '';\n      var name = '';\n    }\n\n    var interpolated = {\n        target: target\n    };\n\n    interpolated.name = name;\n\n    return this.doRequest({\n      url: this.url + '/search',\n      data: interpolated,\n      method: 'POST',\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    const result = this.backendSrv.datasourceRequest(options);\n    return result;\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets and undefined targets\n    options.targets = _.filter(options.targets, target => {\n      return (target.target !== '' && typeof target.target !== 'undefined');\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        alias: target.alias,\n        operator: target.operator,\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}