{"version":3,"sources":["../src/datasource.js"],"names":["ArchiverapplianceDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","jsonData","operatorList","options","query","buildQueryParameters","targets","_","filter","t","hide","when","data","map","target","targetProcess","all","then","postProcess","buildUrls","urls","doMultiUrlRequests","responses","responseParse","setAlias","applyFunctions","d","flatten","pvnames_promise","regex","PVNamesFindQuery","pvnames","defer","resolve","promise","deferred","pvname","buildUrl","operator","interval","from","to","e","reject","pv","join","includes","undefined","Error","toISOString","requests","doRequest","method","target_data","response","td","target_res","timesiries","datapoint","val","secs","floor","nanos","meta","datapoints","alias","pattern","alias_pattern","RegExp","forEach","replace","functions","transformFunctions","bindFunctionDefs","timeseries","sequence","status","message","title","str","encodeURIComponent","res","text","result","datasourceRequest","Date","range","range_msec","getTime","interval_sec","maxDataPoints","String","scopedVars","refId","functionDefs","category","aggregationFunctions","aafunc","getCategories","aggFuncDefs","func","def","funcInstance","createFuncInstance","params","bindFunction","dataProcessor","aaFunctions","funcsArray","i","call"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport dataProcessor from './dataProcessor';\nimport * as aafunc from './aafunc';\n\nexport class ArchiverapplianceDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = {'Content-Type': 'application/json'};\n    if (\n        typeof instanceSettings.basicAuth === 'string'\n        && instanceSettings.basicAuth.length > 0\n    ) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    const jsonData = instanceSettings.jsonData || {};\n\n    this.operatorList = [\n        'firstSample', 'lastSample', 'firstFill', 'lastFill', 'mean', 'min',\n        'max', 'count', 'ncount', 'nth', 'median', 'std', 'jitter',\n        'ignoreflyers', 'flyers', 'variance',\n        'popvariance', 'kurtosis', 'skewness', 'raw'\n    ];\n  }\n\n  query(options) {\n    let query = this.buildQueryParameters(options);\n    query.targets = _.filter(query.targets, t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    const targets = _.map(query.targets, (target) => {\n      return this.targetProcess(target, options);\n    });\n\n   return this.q.all(targets).then(data => this.postProcess(data));\n  }\n\n  targetProcess(target, options) {\n    return (\n      this.buildUrls(target, options)\n      .then(urls      => this.doMultiUrlRequests(urls))\n      .then(responses => this.responseParse(responses))\n      .then(data      => this.setAlias(data, target))\n      .then(data      => this.applyFunctions(data, target))\n    );\n  }\n\n  postProcess(data) {\n    const d = _.flatten(data);\n\n    return { data: d };\n  }\n\n  buildUrls(target) {\n    let pvnames_promise;\n    if (target.regex) {\n      pvnames_promise = this.PVNamesFindQuery(target.target);\n    } else {\n      let pvnames = this.q.defer();\n      pvnames.resolve([target.target]);\n      pvnames_promise = pvnames.promise;\n    }\n\n    return pvnames_promise.then( (pvnames) => {\n      let deferred = this.q.defer();\n      let urls;\n      try {\n        urls = _.map( pvnames, (pvname) => {\n          return this.buildUrl(\n            pvname,\n            target.operator,\n            target.interval,\n            target.from,\n            target.to\n          );\n        });\n      } catch (e) {\n        deferred.reject(e);\n      }\n      deferred.resolve(urls);\n      return deferred.promise;\n    });\n  }\n\n  buildUrl(pvname, operator, interval, from, to) {\n    let pv = ''\n    if (operator === 'raw' || interval === '') {\n      pv = ['pv=', pvname].join('');\n    } else if (_.includes(['', undefined], operator)) {\n      // Default Operator\n      pv = ['pv=mean_', interval, '(', pvname, ')'].join('');\n    } else if (_.includes(this.operatorList, operator) ) {\n      pv = ['pv=', operator, '_', interval, '(', pvname, ')'].join('');\n    } else {\n      throw new Error('Data Processing Operator is invalid.');\n    }\n\n    const url = [\n      this.url,\n      '/data/getData.json?',\n      pv,\n      '&from=',\n      from.toISOString(),\n      '&to=',\n      to.toISOString()\n    ].join('');\n\n    return url;\n  }\n\n  doMultiUrlRequests(urls) {\n    const requests = _.map(urls, (url) => {\n      return this.doRequest({ url: url, method: 'GET' });\n    });\n\n    return this.q.all(requests);\n  }\n\n  responseParse(responses) {\n    let deferred = this.q.defer();\n\n    const target_data = _.map(responses, (response) => {\n      const td = _.map(response.data, (target_res) => {\n        const timesiries = _.map( target_res.data, (datapoint) => {\n          return [\n            datapoint.val,\n            datapoint.secs * 1000 + _.floor(datapoint.nanos / 1000000)\n          ];\n        });\n        const target_data = { target: target_res.meta['name'], datapoints: timesiries };\n        return target_data;\n      });\n      return td;\n    });\n\n    deferred.resolve(_.flatten(target_data));\n    return deferred.promise;\n  }\n\n  setAlias(data, target) {\n    let deferred = this.q.defer();\n\n    if (!target.alias) {\n      deferred.resolve(data);\n      return deferred.promise;\n    }\n\n    let pattern;\n    if (target.alias_pattern) {\n      pattern = new RegExp(target.alias_pattern, '');\n    }\n\n    _.forEach( data, (d) => {\n      if (pattern) {\n        d.target = d.target.replace(pattern, target.alias);\n      } else {\n        d.target = target.alias;\n      }\n    });\n\n    deferred.resolve(data);\n    return deferred.promise;\n  }\n\n  applyFunctions(data, target) {\n    let deferred = this.q.defer();\n\n    if (target.functions === undefined) {\n      deferred.resolve(data);\n      return deferred.promise;\n    }\n\n    // Apply transformation functions\n    const transformFunctions = bindFunctionDefs(target.functions, 'Transform');\n    data = _.map(data, (timeseries) => {\n      timeseries.datapoints = sequence(transformFunctions)(timeseries.datapoints);\n      return timeseries;\n    });\n\n    deferred.resolve(data);\n    return deferred.promise;\n  }\n\n  testDatasource() {\n    return { status: 'success', message: 'Data source is working', title: 'Success' };\n    //return this.doRequest({\n    //  url: this.url_mgmt + '/bpl/getAppliancesInCluster',\n    //  method: 'GET',\n    //}).then(response => {\n    //  if (response.status === 200) {\n    //    return { status: 'success', message: 'Data source is working', title: 'Success' };\n    //  }\n    //});\n  }\n\n  PVNamesFindQuery(query) {\n    const str = this.templateSrv.replace(query, null, 'regex');\n\n    if (!str) {\n      let deferred = this.q.defer();\n      deferred.resolve([]);\n      return deferred.promise;\n    }\n\n    const url = [\n      this.url,\n      '/bpl/getMatchingPVs?limit=100&regex=',\n      encodeURIComponent(str)\n    ].join('');\n\n    return this.doRequest({\n      url: url,\n      method: 'GET',\n    }).then( (res) => {\n      return res.data;\n    });\n  }\n\n  metricFindQuery(query) {\n    return this.PVNamesFindQuery(query).then( (pvnames) => {\n      return _.map(pvnames, (pvname) => {\n        return { text: pvname };\n      });\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    const result = this.backendSrv.datasourceRequest(options);\n    return result;\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets and undefined targets\n    options.targets = _.filter(options.targets, (target) => {\n      return (target.target !== '' && typeof target.target !== 'undefined');\n    });\n\n    if (options.targets.length <= 0) {\n      return options;\n    }\n\n    const from = new Date(options.range.from);\n    const to = new Date(options.range.to);\n    const range_msec = to.getTime() - from.getTime();\n    const interval_sec =  _.floor(range_msec / ( options.maxDataPoints * 1000));\n\n    let interval = '';\n    if ( interval_sec >= 1 ) {\n      interval = String(interval_sec);\n    }\n\n    const targets = _.map(options.targets, (target) => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        alias: target.alias,\n        operator: target.operator,\n        from: from,\n        to: to,\n        interval: interval,\n        functions: target.functions,\n        regex: target.regex,\n        alias_pattern: target.alias_pattern\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n\nfunction bindFunctionDefs(functionDefs, category) {\n  const aggregationFunctions = _.map(aafunc.getCategories()[category], 'name');\n  const aggFuncDefs = _.filter(functionDefs, function(func) {\n    return _.includes(aggregationFunctions, func.def.name);\n  });\n\n  return _.map(aggFuncDefs, func => {\n    let funcInstance = aafunc.createFuncInstance(func.def, func.params);\n    return funcInstance.bindFunction(dataProcessor.aaFunctions);\n  });\n}\n\nfunction sequence(funcsArray) {\n  return function (result) {\n    for (let i = 0; i < funcsArray.length; i++) {\n      result = funcsArray[i].call(this, result);\n    }\n    return result;\n  };\n}\n"],"file":"datasource.js"}