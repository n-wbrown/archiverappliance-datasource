{"version":3,"sources":["../src/query_ctrl.js"],"names":["ArchiverapplianceDatasourceQueryCtrl","$scope","$injector","scope","target","type","functions","getPVNames","_","bind","getPVNames_","getOperators","getOperators_","funcDef","newFunc","aafunc","createFuncInstance","added","push","moveAliasFuncLast","params","length","def","targetChanged","func","without","offset","index","indexOf","move","aliasFunc","find","category","query","callback","regex","str","join","datasource","pvNamesFindQuery","then","res","operatorList","rawQuery","panelCtrl","refresh","e","keyCode","blur","QueryCtrl","templateUrl"],"mappings":"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","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport * as aafunc from './aafunc';\n\nexport class ArchiverapplianceDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.type = this.target.type || 'timeserie';\n    this.target.functions = this.target.functions || [];\n\n    this.getPVNames = _.bind(this.getPVNames_, this);\n    this.getOperators = _.bind(this.getOperators_, this);\n  }\n\n  addFunction(funcDef) {\n    var newFunc = aafunc.createFuncInstance(funcDef);\n    newFunc.added = true;\n    this.target.functions.push(newFunc);\n\n    this.moveAliasFuncLast();\n\n    if (\n        newFunc.params.length\n        && newFunc.added\n        || newFunc.def.params.length === 0\n    ) {\n      this.targetChanged();\n    }\n  }\n\n  removeFunction(func) {\n    this.target.functions = _.without(this.target.functions, func);\n    this.targetChanged();\n  }\n\n  moveFunction(func, offset) {\n    const index = this.target.functions.indexOf(func);\n    _.move(this.target.functions, index, index + offset);\n    this.targetChanged();\n  }\n\n  moveAliasFuncLast() {\n    var aliasFunc = _.find(this.target.functions, func => {\n      return func.def.category === 'Alias';\n    });\n\n    if (aliasFunc) {\n      this.target.functions = _.without(this.target.functions, aliasFunc);\n      this.target.functions.push(aliasFunc);\n    }\n  }\n\n  getPVNames_(query, callback) {\n    if (this.target.regex) {\n      return [];\n    }\n    const str = ['.*', query, '.*'].join('');\n    this.datasource.pvNamesFindQuery(str).then((res) => {\n      callback(res);\n    });\n  }\n\n  getOperators_(query) {\n    return this.datasource.operatorList;\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  targetChanged() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  onKeyup(e) {\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  }\n}\n\nArchiverapplianceDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"],"file":"query_ctrl.js"}